import localidades.*

describe "contexto Al Aplicarle 25% de descuento a Last Toninas" {
	
	fixture {
		lastToninas.aplicarDescuento(25)
	}
	
	test "El precio de Last Toninas es de $2625" {
		//assert.that(lastToninas.precio() == 2625)
		assert.equals(2625, lastToninas.precio())
	}

	test "Last Toninas tiene al certificado de descuento como parte de su equipaje imprescindible" {
		assert.that(lastToninas.equipajeImprescindible().contains("Certificado de descuento"))
	}

}

describe "Test con Silver's Sea"{
	test "Averiguar si Silver's Sea es un destino peligroso" {
    	assert.notThat(silversSea.requiereVacuna())
	}
}

describe "Test con 2 localidades aleatorias" {
	test "La distancia de A a B es igual a la distancia de B a A" {
		const localidades = #{goodAirs,lastToninas,silversSea,garlicsSea}
		const A = localidades.anyOne()
		const B = localidades.anyOne()
		
		const distanciaDeAaB = A.distanciaA(B)
		const distanciaDeBaA = B.distanciaA(A)
		
		assert.equals(distanciaDeAaB,distanciaDeBaA)
	}
}

describe "Tests con monta単as" {
	test "Peligrosa si mide mas de 5000mts" {
		const montania = new Montania(
			altura = 5001,
		    equipajeImprescindible = ["Vacuna"],
		    precio = 0,
		    nombre = "monta単a",
		    kilometro = 103
		)
		
		assert.that(montania.esPeligrosa())
	}
	
	test "Peligrosa si no requiere vacuna" {
		const montania = new Montania(
			altura = 1,
		    equipajeImprescindible = [],
		    precio = 0,
		    nombre = "monta単a",
		    kilometro = 103
		)
		
		assert.that(montania.esPeligrosa())
	}
	
	test "No eseligrosa si requiere vacuna y mide menos de 5000mts" {
		const montania = new Montania(
			altura = 4999,
		    equipajeImprescindible = ["Vacuna"],
		    precio = 0,
		    nombre = "monta単a",
		    kilometro = 103
		)
		
		assert.notThat(montania.esPeligrosa())
	}
}

describe "Es destino importante" {
	test "Una ciudad historica con 3 museos y con un precio mayor a 2000 es un destino importante" {
		const ciudad = new CiudadHistorica(
			cantDeMuseos = 3,
			equipajeImprescindible = [],
			precio = 2001,
			nombre = "ciudad",
		    kilometro = 102
		)
		
		assert.that(ciudad.esDestinoImportante())
	}
}